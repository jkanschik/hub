"use strict";angular.module("hubApp",["ngAnimate","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","hub.widgets"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]).run(["$rootScope",function(a){var b=new EventSource("/rest/events");b.onmessage=function(b){var c=JSON.parse(b.data);a.$broadcast(c.topic,c.object)},b.onerror=function(a){console.error("Problem with connection to openhab event stream:",a)}}]),angular.module("hubApp").controller("MainCtrl",["$scope","widgets",function(a,b){a.widget=b}]),angular.module("hubApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("hubApp").constant("widgets",{label:"Start",widgets:[{type:"group",label:"Wohnzimmer",widgets:[]},{type:"group",label:"Schlafzimmer",widgets:[]},{type:"dateTime"},{type:"weather",location:"Essen",thingUID:"yahooweather:weather:2c0d6cbf"},{type:"weather",location:"Berlin",thingUID:"yahooweather:weather:berlin"}]}),angular.module("hub.rest",[]).factory("Items",["$resource",function(a){return a("rest/items/:name")}]).factory("Things",["$resource",function(a){return a("rest/things/:uid",{uid:"@uid"})}]),angular.module("hub.widgets",["hub.widgets.group","hub.widgets.dateTime","hub.widgets.weather"]),angular.module("hub.widgets").directive("hubWidget",function(){return{templateUrl:"widgets/widget.html",restrict:"E",scope:{widget:"="}}}),angular.module("hub.widgets.group",[]).config(["$routeProvider",function(a){a.when("/widgets/group/:id",{templateUrl:"widgets/group/groupContainer.html",controller:"GroupContainerCtrl"})}]),angular.module("hub.widgets").directive("hubGroupTile",function(){return{templateUrl:"widgets/group/groupTile.html",restrict:"E"}}),angular.module("hub.widgets.group").controller("GroupContainerCtrl",["$scope",function(a){a.items=[{},{}]}]),angular.module("hub.widgets.dateTime",[]),angular.module("hub.widgets.dateTime").controller("DateTimeTileCtrl",["$scope","$interval",function(a,b){function c(){a.currentDateTime=new Date}a.$on("smarthome/update/Sun_Elevation",function(b,c){a.sunElevation=c});var d;d=b(function(){c()},1e3),c()}]),angular.module("hub.widgets.dateTime").directive("hubDateTimeTile",["$interval",function(a){return{templateUrl:"widgets/dateTime/dateTimeTile.html",restrict:"E",link:function(b,c){function d(){b.currentDateTime=new Date}var e;c.on("$destroy",function(){a.cancel(e)}),e=a(function(){d()},1e3),d()}}}]),angular.module("hub.widgets.weather",["hub.rest"]),angular.module("hub.widgets.weather").controller("WeatherTileCtrl",["$scope","$q","Things","Items",function(a,b,c,d){a.thing=c.get({uid:a.widget.thingUID}).$promise.then(function(b){var c=_.groupBy(b.channels,"id");a.channelItems=_.mapValues(c,function(a){var b=a[0].linkedItems;return 1===b.length?d.get({name:b[0]}):void 0})})}]),angular.module("hubApp").filter("itemState",function(){return function(a){return a&&a.stateDescription&&a.stateDescription.pattern?sprintf(a.stateDescription.pattern,a.state):a}}),angular.module("hubApp").run(["$templateCache",function(a){a.put("widgets/dateTime/dateTimeTile.html",'<div class="col-xs-6 col-sm-6 col-md-6" ng-controller="DateTimeTileCtrl"> <div class="tile tile-medium tile-orange date-time-item-tile"> <div class="date-time-container"> <span class="time">{{currentDateTime | date:\'H:mm\'}}</span> <span class="day-in-week">{{currentDateTime | date:\'EEEE\'}}</span> <span class="date">{{currentDateTime | date:\'mediumDate\'}}</span> </div> <small>Sun elevation: {{sunElevation}}</small> </div> </div>'),a.put("widgets/group/groupContainer.html","<hub-group-item-tile></hub-group-item-tile> <hub-group-item-tile></hub-group-item-tile> <hub-date-time-item-tile></hub-date-time-item-tile>"),a.put("widgets/group/groupTile.html",'<div class="col-xs-12 col-sm-6 col-md-6"> <div class="tile tile-wide tile-white"> <a href="#/widgets/group/4711" class="fa-links"> <h1 style="color:#0a2864">Wohnzimmer</h1> <div class="tile-content" style="color:#3e3e3e"> Aktive Geräte: <span class="badge pull-right">42</span> </div> </a> </div> </div>'),a.put("widgets/weather/weatherTile.html",'<div class="col-xs-6 col-sm-3 col-md-3" ng-controller="WeatherTileCtrl"> <div class="tile tile-medium weather-tile"> <div class="btn-group btn-group-xs tile-menu"> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"> <span class="caret"></span> </button> <ul class="dropdown-menu"> <li><a href="#">Einstellungen</a></li> <li><a href="#">Hilfe</a></li> <li role="separator" class="divider"></li> <li><a href="#">Löschen</a></li> </ul> </div> <h1>{{widget.location}}</h1> <div class="weather-temperature"> {{channelItems.temperature | itemState}} </div> <div class="weather-humidity pull-right" ng-show="channelItems.humidity"> {{channelItems.humidity | itemState}} </div> <div class="weather-pressure" ng-show="channelItems.pressure"> {{channelItems.pressure | itemState}} </div> </div> </div>'),a.put("widgets/widget.html","<div ng-include=\"'widgets/' + widget.type + '/' + widget.type + 'Tile.html'\"> </div>"),a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<div class="row"> <hub-widget ng-repeat="widget in widget.widgets" widget="widget"></hub-widget> </div>')}]);